akka {
  loglevel = INFO

  actor {
    provider = cluster
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://ClusterSystem@127.0.0.1:2551",
      "akka.tcp://ClusterSystem@127.0.0.1:2552"
    ]

    auto-down-unreachable-after = 10s

  }
  // persistence configuration for sample.cluster.sharding.blog.BlogApp
  persistence {
    journal {
      plugin = "akka.persistence.journal.leveldb-shared"
      leveldb-shared.store {
        # DO NOT USE 'native = off' IN PRODUCTION !!!
        native = off
        dir = "target/shared-journal"
      }
    }
    snapshot-store {
      plugin = "akka.persistence.snapshot-store.local"
      local.dir = "target/snapshots"
    }
    snapshot-store.plugin = "akka.persistence.snapshot-store.local"
    snapshot-store.local.dir = "target/snapshots"
  }

}

#Disable legacy metrics in akka-cluster
akka.cluster.metrics.enabled=off

# Enable metrics extensions
akka.extensions=["akka.cluster.metrics.ClusterMetricsExtension"]

# Sigar native library extract location during tests.
# Note: use per-jvm-instance folder when running multiple jvm on one host.
akka.cluster.metrics.native-library-extract-folder=${user.dir}/target/native

# Akka behind NAT or in a Docker container
# In setups involving Network Address Translation (NAT),
# Load Balancers or Docker containers the hostname and port pair that Akka binds to will be different
# than the "logical" host name and port pair that is used to connect to the system from the outside.
# This requires special configuration that sets both the logical and the bind pairs for remoting.

//akka {
//  remote {
//    netty.tcp {
//      hostname = my.domain.com      # external (logical) hostname
//      port = 8000                   # external (logical) port
//
//      bind-hostname = local.address # internal (bind) hostname
//      bind-port = 2552              # internal (bind) port
//    }
//  }
//}